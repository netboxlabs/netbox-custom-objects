# Generated by Django 5.2.5 on 2025-09-04 16:34

import django.db.models.deletion
from django.db import migrations, models


def populate_object_type_field(apps, schema_editor):
    """
    Populate the object_type field for existing CustomObjectType instances.
    """
    CustomObjectType = apps.get_model('netbox_custom_objects', 'CustomObjectType')
    ObjectType = apps.get_model('core', 'ObjectType')
    app_label = CustomObjectType._meta.app_label

    for custom_object_type in CustomObjectType.objects.all():
        content_type_name = f"Table{custom_object_type.id}Model".lower()
        try:
            object_type = ObjectType.objects.get(app_label=app_label, model=content_type_name)
            custom_object_type.object_type = object_type
            custom_object_type.save(update_fields=['object_type'])
        except ObjectType.DoesNotExist:
            # If ObjectType doesn't exist, create it
            object_type = ObjectType.objects.create(
                app_label=app_label,
                model=content_type_name
            )
            custom_object_type.object_type = object_type
            custom_object_type.save(update_fields=['object_type'])


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0018_concrete_objecttype"),
        ("netbox_custom_objects", "0002_customobjecttype_version"),
    ]

    operations = [
        migrations.AddField(
            model_name="customobjecttype",
            name="object_type",
            field=models.OneToOneField(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="custom_object_types",
                to="core.objecttype",
            ),
        ),
        migrations.RunPython(
            populate_object_type_field,
        ),
    ]
